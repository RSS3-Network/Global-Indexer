{
    "openapi": "3.0.3",
    "info": {
        "title": "Global Indexer - Network Transparency API",
        "description": "Network Transparency API (NTA) is a set of APIs that provide transparency and visibility into the network. It allows users to query and retrieve information about the network. Learn more: https://forum.rss3.io/t/rss3-network-transparency-api/113",
        "version": "0.1.0"
    },
    "servers": [
        {
            "url": "https://gi.rss3.io",
            "description": "Production"
        },
        {
            "url": "https://gi.rss3.dev",
            "description": "Development"
        },
        {
            "url": "http://localhost",
            "description": "Localhost"
        }
    ],
    "tags": [
        {
            "name": "DSL"
        },
        {
            "name": "NTA"
        },
        {
            "name": "Decentralized"
        },
        {
            "name": "RSS"
        },
        {
            "name": "Bridge"
        },
        {
            "name": "Chips"
        },
        {
            "name": "Epoch"
        },
        {
            "name": "Networks"
        },
        {
            "name": "Node"
        },
        {
            "name": "Snapshots"
        },
        {
            "name": "Stake"
        }
    ],
    "paths": {
        "/decentralized/tx/{id}": {
            "get": {
                "parameters": [
                    {
                        "description": "Retrieve details for the specified activity ID",
                        "example": "0x000000000000000000000000113f4b4c3765e5f05fd197c5c35b8a8a9b34245b",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Specify the number of actions within the activity to retrieve",
                        "example": "10",
                        "in": "query",
                        "name": "action_limit",
                        "required": false,
                        "schema": {
                            "default": 10,
                            "maximum": 20,
                            "minimum": 1,
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Specify the pagination for actions",
                        "example": 1,
                        "in": "query",
                        "name": "action_page",
                        "required": false,
                        "schema": {
                            "default": 1,
                            "minimum": 1,
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response with the details of the activity.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActivityResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is malformed or contains invalid parameters."
                    },
                    "404": {
                        "description": "The specified activity ID was not found."
                    },
                    "500": {
                        "description": "An internal server error occurred while processing the request."
                    }
                },
                "summary": "Get Activity by ID",
                "tags": [
                    "Decentralized",
                    "DSL"
                ]
            }
        },
        "/decentralized/{account}": {
            "get": {
                "parameters": [
                    {
                        "description": "Retrieve activities from the specified account",
                        "example": "0xd8da6bf26964af9d7eed9e03e53415d37aa96045",
                        "in": "path",
                        "name": "account",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Specify the number of activities to retrieve",
                        "example": "20",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "default": 100,
                            "maximum": 100,
                            "minimum": 1,
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Specify the number of actions within the activity to retrieve",
                        "example": "10",
                        "in": "query",
                        "name": "action_limit",
                        "required": false,
                        "schema": {
                            "default": 10,
                            "maximum": 20,
                            "minimum": 1,
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Specify the cursor used for pagination",
                        "in": "query",
                        "name": "cursor",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Retrieve activities starting from this timestamp",
                        "in": "query",
                        "name": "since_timestamp",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Retrieve activities up to this timestamp",
                        "in": "query",
                        "name": "until_timestamp",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Retrieve activities based on success status",
                        "in": "query",
                        "name": "success",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "Retrieve activities based on direction",
                        "in": "query",
                        "name": "direction",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/Direction"
                        }
                    },
                    {
                        "description": "Retrieve activities from the specified network(s)",
                        "in": "query",
                        "name": "network",
                        "required": false,
                        "schema": {
                            "items": {
                                "$ref": "#/components/schemas/Network"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "Retrieve activities from the specified tag(s)",
                        "in": "query",
                        "name": "tag",
                        "required": false,
                        "schema": {
                            "items": {
                                "$ref": "#/components/schemas/Tag"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "Retrieve activities from the specified type(s)",
                        "in": "query",
                        "name": "type",
                        "required": false,
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "Retrieve activities from the specified platform(s)",
                        "in": "query",
                        "name": "platform",
                        "required": false,
                        "schema": {
                            "items": {
                                "$ref": "#/components/schemas/Platform"
                            },
                            "type": "array"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response with the activities from the specified account.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActivitiesResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is malformed or contains invalid parameters."
                    },
                    "404": {
                        "description": "The specified account was not found."
                    },
                    "500": {
                        "description": "An internal server error occurred while processing the request."
                    }
                },
                "summary": "Get Account Activities",
                "tags": [
                    "Decentralized",
                    "DSL"
                ]
            }
        },
        "/rss/{path}": {
            "get": {
                "parameters": [
                    {
                        "description": "Retrieve details for the specified RSS path",
                        "example": "abc",
                        "in": "path",
                        "name": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response with the details of the RSS activity.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActivitiesResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is malformed or contains invalid parameters."
                    },
                    "404": {
                        "description": "The specified RSS path was not found."
                    },
                    "500": {
                        "description": "An internal server error occurred while processing the request."
                    }
                },
                "summary": "Get RSS Activity by Path",
                "tags": [
                    "RSS",
                    "DSL"
                ]
            }
        },
        "/nta/bridge/transactions": {
            "get": {
                "description": "Get bridging transactions",
                "tags": [
                    "Bridge",
                    "NTA"
                ],
                "parameters": [
                    {
                        "name": "cursor",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sender",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "receiver",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "deposit",
                                "withdraw"
                            ]
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/BridgeTransaction"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "data": [
                                        {
                                            "id": "0xdbfa26e70977dfe2d68f3da7dd7d9e0c04136ecf14e80b98b209314ae7c462ff",
                                            "sender": "0x3b6d02a24df681ffdf621d35d70aba7adaac07c1",
                                            "receiver": "0x3b6d02a24df681ffdf621d35d70aba7adaac07c1",
                                            "token": {
                                                "address": {
                                                    "l1": "0x3ef1d5be1e2ce46c583a0c8e511f015706a0ab23",
                                                    "l2": "0x4200000000000000000000000000000000000042"
                                                },
                                                "value": "10000000000000000000000"
                                            },
                                            "event": {
                                                "deposit": {
                                                    "initialized": {
                                                        "block": {
                                                            "hash": "0x7735d45a54e91e836881c2f185766b391f335b53734b0a57f6c8843f66d03a13",
                                                            "number": 5223592,
                                                            "timestamp": 1707118764
                                                        },
                                                        "transaction": {
                                                            "hash": "0x28e8d8f6cbbdfcf14501ebf0bbd11647dfabab371fc7a989a1e441321af6a6ee",
                                                            "index": 49
                                                        }
                                                    },
                                                    "finalized": {
                                                        "block": {
                                                            "hash": "0xb0208c1b76aca5d51cb3cde5d10a90f20c2e520c935fbb99af0b66031489433e",
                                                            "number": 117285,
                                                            "timestamp": 1707118890
                                                        },
                                                        "transaction": {
                                                            "hash": "0x493972cb6219c74071c69fd9279df74b8cebbac4d087259991253e58930a4edb",
                                                            "index": 1
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "cursor": "0xdbfa26e70977dfe2d68f3da7dd7d9e0c04136ecf14e80b98b209314ae7c462ff"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nta/bridge/transactions/{transaction_hash}": {
            "get": {
                "description": "Get bridging transaction by transaction hash",
                "tags": [
                    "Bridge",
                    "NTA"
                ],
                "parameters": [
                    {
                        "name": "transaction_hash",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/BridgeTransaction"
                                        }
                                    }
                                },
                                "example": {
                                    "data": {
                                        "id": "0xdbfa26e70977dfe2d68f3da7dd7d9e0c04136ecf14e80b98b209314ae7c462ff",
                                        "sender": "0x3b6d02a24df681ffdf621d35d70aba7adaac07c1",
                                        "receiver": "0x3b6d02a24df681ffdf621d35d70aba7adaac07c1",
                                        "token": {
                                            "address": {
                                                "l1": "0x3ef1d5be1e2ce46c583a0c8e511f015706a0ab23",
                                                "l2": "0x4200000000000000000000000000000000000042"
                                            },
                                            "value": "10000000000000000000000"
                                        },
                                        "event": {
                                            "deposit": {
                                                "initialized": {
                                                    "block": {
                                                        "hash": "0x7735d45a54e91e836881c2f185766b391f335b53734b0a57f6c8843f66d03a13",
                                                        "number": 5223592,
                                                        "timestamp": 1707118764
                                                    },
                                                    "transaction": {
                                                        "hash": "0x28e8d8f6cbbdfcf14501ebf0bbd11647dfabab371fc7a989a1e441321af6a6ee",
                                                        "index": 49
                                                    }
                                                },
                                                "finalized": {
                                                    "block": {
                                                        "hash": "0xb0208c1b76aca5d51cb3cde5d10a90f20c2e520c935fbb99af0b66031489433e",
                                                        "number": 117285,
                                                        "timestamp": 1707118890
                                                    },
                                                    "transaction": {
                                                        "hash": "0x493972cb6219c74071c69fd9279df74b8cebbac4d087259991253e58930a4edb",
                                                        "index": 1
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nta/stake/transactions": {
            "get": {
                "description": "Get staking transactions",
                "tags": [
                    "Stake",
                    "NTA"
                ],
                "parameters": [
                    {
                        "name": "cursor",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "staker",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "node",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "deposit",
                                "withdraw",
                                "stake",
                                "unstake"
                            ]
                        }
                    },
                    {
                        "name": "pending",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/StakeTransaction"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "data": [
                                        {
                                            "id": "0xbfbb8cbffc01c13c1f849ecfb53099309e189b362fd621addbfa9f5d03dcd0c1",
                                            "staker": "0xc8b960d09c0078c18dcbe7eb9ab9d816bcca8944",
                                            "node": "0x6727a51caefcaf1bc189a8316ea09f844644b195",
                                            "value": "8239445455124262851652",
                                            "chips": [
                                                {
                                                    "id": 2105,
                                                    "node": "0x6727a51caefcaf1bc189a8316ea09f844644b195",
                                                    "owner": "0xc8b960d09c0078c18dcbe7eb9ab9d816bcca8944",
                                                    "metadata": {
                                                        "name": "Chip #2105",
                                                        "description": "Chip is a unique NFT that represents a Node in the network. It is generated based on the node's address and token ID.",
                                                        "image": "https://gi.rss3.dev/chips/2105/image.svg"
                                                    }
                                                }
                                            ],
                                            "event": {
                                                "deposit": {
                                                    "deposited": {
                                                        "block": {
                                                            "hash": "0x37af6202ef8303485aa3db32be6668070b6b9c7e46521325f959369847482015",
                                                            "number": 128115,
                                                            "timestamp": 1707140550
                                                        },
                                                        "transaction": {
                                                            "hash": "0x823d988f7a18215ea850010131e5fa138d8d882ae4f95716d5791a45fac57833",
                                                            "index": 1
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "cursor": "0xbfbb8cbffc01c13c1f849ecfb53099309e189b362fd621addbfa9f5d03dcd0c1"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nta/stake/transactions/{transaction_hash}": {
            "get": {
                "description": "Get staking transaction by transaction hash",
                "tags": [
                    "Stake",
                    "NTA"
                ],
                "parameters": [
                    {
                        "name": "transaction_hash",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/StakeTransaction"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nta/stake/stakings": {
            "get": {
                "description": "Get a list of stakers and Nodes",
                "tags": [
                    "Stake",
                    "NTA"
                ],
                "parameters": [
                    {
                        "name": "staker_address",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "node_address",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/StakeStaking"
                                            }
                                        },
                                        "cursor": {
                                            "type": "string",
                                            "example": "0x08d66b34054a174841e2361bd4746ff9f4905cc2"
                                        }
                                    }
                                },
                                "example": {
                                    "data": [
                                        {
                                            "staker": "0x827431510a5d249ce4fdb7f00c83a3353f471848",
                                            "node": "0x3b6d02a24df681ffdf621d35d70aba7adaac07c1",
                                            "chips": {
                                                "total": 1,
                                                "showcase": [
                                                    {
                                                        "id": 21,
                                                        "node": "0x3b6d02a24df681ffdf621d35d70aba7adaac07c1",
                                                        "owner": "0x827431510a5d249ce4fdb7f00c83a3353f471848",
                                                        "metadata": {
                                                            "name": "Chip #21",
                                                            "description": "Chip is a unique NFT that represents a Node in the network. It is generated based on the node's address and token ID.",
                                                            "image": "https://gi.rss3.dev/chips/21/image.svg"
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    ],
                                    "cursor": "MHg4Mjc0MzE1MTBhNWQyNDljZTRmZGI3ZjAwYzgzYTMzNTNmNDcxODQ4LTB4M2I2ZDAyYTI0ZGY2ODFmZmRmNjIxZDM1ZDcwYWJhN2FkYWFjMDdjMQ=="
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nta/stake/{staker_address}/profit": {
            "get": {
                "description": "Get staking profit of a staker",
                "tags": [
                    "Stake",
                    "NTA"
                ],
                "parameters": [
                    {
                        "name": "staker_address",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "owner": {
                                                    "type": "string"
                                                },
                                                "total_chip_amount": {
                                                    "type": "string"
                                                },
                                                "total_chip_value": {
                                                    "type": "string"
                                                },
                                                "oneDay": {
                                                    "$ref": "#/components/schemas/ChipPNL"
                                                },
                                                "oneWeek": {
                                                    "$ref": "#/components/schemas/ChipPNL"
                                                },
                                                "oneMonth": {
                                                    "$ref": "#/components/schemas/ChipPNL"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nta/chips": {
            "get": {
                "description": "Get all chips",
                "tags": [
                    "Chips",
                    "NTA"
                ],
                "parameters": [
                    {
                        "name": "cursor",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "node",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "owner",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Chips"
                                            }
                                        },
                                        "cursor": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nta/chips/{chip_id}": {
            "get": {
                "description": "Get Chips by chip id",
                "tags": [
                    "Chips",
                    "NTA"
                ],
                "parameters": [
                    {
                        "name": "chip_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Chips"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/nta/chips/{chip_id}/image.svg": {
            "get": {
                "description": "Get Chips image by chip id",
                "tags": [
                    "Chips",
                    "NTA"
                ],
                "parameters": [
                    {
                        "name": "chip_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "image/svg+xml": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/nta/snapshots/nodes/count": {
            "get": {
                "description": "Get snapshots of Node count",
                "tags": [
                    "Snapshots",
                    "NTA"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "date": {
                                                        "type": "string"
                                                    },
                                                    "count": {
                                                        "type": "integer"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "data": [
                                        {
                                            "date": "2024-02-19",
                                            "count": 2
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nta/snapshots/nodes/min_tokens_to_stake": {
            "post": {
                "description": "Get snapshots of the minimum staking amount for Nodes",
                "tags": [
                    "Snapshots",
                    "NTA"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "node_addresses": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "only_start_and_end": {
                                        "type": "boolean",
                                        "description": "If true, only return the start and end min_tokens_to_stake"
                                    }
                                },
                                "example": {
                                    "node_addresses": [
                                        "0x9c29e25d7e475caee73d4b7006f3b10e977773ac",
                                        "0x08d66b34054a174841e2361bd4746ff9f4905cc2"
                                    ],
                                    "only_start_and_end": true
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/NodeMinTokensToStakeSnapshot"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nta/snapshots/stakers/count": {
            "get": {
                "description": "Get snapshots of total staker count",
                "tags": [
                    "Snapshots",
                    "NTA"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "date": {
                                                        "type": "string"
                                                    },
                                                    "count": {
                                                        "type": "integer"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "data": [
                                        {
                                            "date": "2024-02-19",
                                            "count": 2
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nta/snapshots/stakers/profit": {
            "get": {
                "description": "Get snapshots of the profit of stakers",
                "tags": [
                    "Snapshots",
                    "NTA"
                ],
                "parameters": [
                    {
                        "name": "staker_address",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The number of snapshots to return, if not provided, return all snapshots"
                    },
                    {
                        "name": "beforeDate",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        },
                        "description": "The date before which the snapshots are returned"
                    },
                    {
                        "name": "afterDate",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        },
                        "description": "The date after which the snapshots are returned"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/StakerProfitSnapshot"
                                            }
                                        },
                                        "cursor": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nta/snapshots/nodes/operation/profit": {
            "get": {
                "description": "Get snapshots of operation profit of a Node",
                "tags": [
                    "Snapshots",
                    "NTA"
                ],
                "parameters": [
                    {
                        "name": "node_address",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The number of snapshots to return, if not provided, return all snapshots"
                    },
                    {
                        "name": "beforeDate",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        },
                        "description": "The date before which the snapshots are returned"
                    },
                    {
                        "name": "afterDate",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        },
                        "description": "The date after which the snapshots are returned"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/OperationProfit"
                                            }
                                        },
                                        "cursor": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nta/snapshots/epochs/apy": {
            "get": {
                "description": "Get the apy of epoch snapshots",
                "tags": [
                    "Snapshots",
                    "NTA"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/EpochAPYSnapshot"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nta/nodes": {
            "get": {
                "description": "Get all Nodes",
                "tags": [
                    "Node",
                    "NTA"
                ],
                "parameters": [
                    {
                        "name": "cursor",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The number of Nodes to return, default is 10, maximum is 50",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "minimum": 1,
                            "maximum": 50
                        }
                    },
                    {
                        "name": "node_address",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "default": []
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Node"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/nta/nodes/{address}": {
            "get": {
                "description": "Get Node by address",
                "tags": [
                    "Node",
                    "NTA"
                ],
                "parameters": [
                    {
                        "name": "address",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Node"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/nta/nodes/{address}/avatar.svg": {
            "get": {
                "description": "Get Node avatar by address",
                "tags": [
                    "Node",
                    "NTA"
                ],
                "parameters": [
                    {
                        "name": "address",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "image/svg+xml": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/nta/nodes/{address}/events": {
            "get": {
                "description": "Get Node transaction events by address",
                "tags": [
                    "Node",
                    "NTA"
                ],
                "parameters": [
                    {
                        "name": "address",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/NodeEvent"
                                            }
                                        },
                                        "cursor": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/nta/nodes/{node_address}/operation/profit": {
            "get": {
                "description": "Get Node operation profit by Node address",
                "tags": [
                    "Node",
                    "NTA"
                ],
                "parameters": [
                    {
                        "name": "node_address",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "address": {
                                                    "type": "string"
                                                },
                                                "operation_pool": {
                                                    "type": "string"
                                                },
                                                "oneDay": {
                                                    "$ref": "#/components/schemas/OperationProfitPNL"
                                                },
                                                "oneWeek": {
                                                    "$ref": "#/components/schemas/OperationProfitPNL"
                                                },
                                                "oneMonth": {
                                                    "$ref": "#/components/schemas/OperationProfitPNL"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nta/epochs": {
            "get": {
                "description": "Get all epochs",
                "tags": [
                    "Epoch",
                    "NTA"
                ],
                "parameters": [
                    {
                        "name": "cursor",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "minimum": 1,
                            "maximum": 50
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/BriefEpoch"
                                            }
                                        },
                                        "cursor": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nta/epochs/{epoch_id}": {
            "get": {
                "description": "Get epoch by epoch id",
                "tags": [
                    "Epoch",
                    "NTA"
                ],
                "parameters": [
                    {
                        "name": "epoch_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Epoch"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nta/epochs/distributions/{transaction_hash}": {
            "get": {
                "description": "Get epoch transaction by hash",
                "tags": [
                    "Epoch",
                    "NTA"
                ],
                "parameters": [
                    {
                        "name": "transaction_hash",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/EpochDistribution"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nta/epochs/{node_address}/rewards": {
            "get": {
                "description": "Get Node rewards by epoch",
                "tags": [
                    "Epoch",
                    "NTA"
                ],
                "parameters": [
                    {
                        "name": "node_address",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 20,
                            "minimum": 1,
                            "maximum": 50
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Epoch"
                                            }
                                        },
                                        "cursor": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nta/epochs/apy": {
            "get": {
                "description": "Get the average of epochs APY",
                "tags": [
                    "Epoch",
                    "NTA"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nta/networks": {
            "get": {
                "description": "Get all compatible networks",
                "tags": [
                    "Networks",
                    "NTA"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/nta/networks/{network_name}/list_workers": {
            "get": {
                "description": "Get available workers by network",
                "tags": [
                    "Networks",
                    "NTA"
                ],
                "parameters": [
                    {
                        "name": "network_name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/nta/networks/{network_name}/workers/{worker_name}": {
            "get": {
                "description": "Get config by network and worker",
                "tags": [
                    "Networks",
                    "NTA"
                ],
                "parameters": [
                    {
                        "name": "network_name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "worker_name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/NetworkWorker"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Action": {
                "description": "Represents an individual action within an activity.",
                "properties": {
                    "from": {
                        "description": "The address from which the action originated.",
                        "type": "string"
                    },
                    "metadata": {
                        "description": "Additional metadata related to the action.",
                        "type": "object"
                    },
                    "platform": {
                        "$ref": "#/components/schemas/Platform"
                    },
                    "related_urls": {
                        "description": "A list of URLs related to the action.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "tag": {
                        "$ref": "#/components/schemas/Tag"
                    },
                    "to": {
                        "description": "The address to which the action is directed.",
                        "type": "string"
                    },
                    "type": {
                        "description": "The type of action performed.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ActivitiesResponse": {
                "description": "The response structure for a list of activities.",
                "properties": {
                    "data": {
                        "description": "The list of activities.",
                        "items": {
                            "$ref": "#/components/schemas/Activity"
                        },
                        "type": "array"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/MetaCursor"
                    }
                },
                "type": "object"
            },
            "Activity": {
                "properties": {
                    "actions": {
                        "description": "The list of actions within the activity.",
                        "items": {
                            "$ref": "#/components/schemas/Action"
                        },
                        "type": "array"
                    },
                    "calldata": {
                        "$ref": "#/components/schemas/Calldata"
                    },
                    "direction": {
                        "$ref": "#/components/schemas/Direction"
                    },
                    "fee": {
                        "$ref": "#/components/schemas/Fee"
                    },
                    "from": {
                        "description": "The address from which the activity originated.",
                        "type": "string"
                    },
                    "id": {
                        "description": "The unique identifier for the activity.",
                        "type": "string"
                    },
                    "index": {
                        "description": "The index of the activity in the list.",
                        "type": "integer"
                    },
                    "network": {
                        "$ref": "#/components/schemas/Network"
                    },
                    "owner": {
                        "description": "The owner of the activity.",
                        "type": "string"
                    },
                    "platform": {
                        "$ref": "#/components/schemas/Platform"
                    },
                    "success": {
                        "description": "Indicates whether the activity was successful.",
                        "type": "boolean"
                    },
                    "tag": {
                        "$ref": "#/components/schemas/Tag"
                    },
                    "timestamp": {
                        "description": "The timestamp of when the activity occurred.",
                        "type": "integer"
                    },
                    "to": {
                        "description": "The address to which the activity is directed.",
                        "type": "string"
                    },
                    "total_actions": {
                        "description": "The total number of actions within the activity.",
                        "type": "integer"
                    },
                    "type": {
                        "description": "The type of activity performed.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ActivityResponse": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Activity"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/MetaTotalPages"
                    }
                },
                "type": "object"
            },
            "Calldata": {
                "description": "Represents the call data associated with an activity.",
                "properties": {
                    "function_hash": {
                        "description": "The hash of the function called.",
                        "type": "string"
                    },
                    "parsed_function": {
                        "description": "The parsed function name.",
                        "type": "string"
                    },
                    "raw": {
                        "description": "The raw call data.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Direction": {
                "description": "The direction of an activity.",
                "type": "string"
            ,"enum":["in","out","self"]},
            "Tag": {
                "description": "A tag used to categorize activities.",
                "type": "string"
            ,"enum":["collectible","exchange","metaverse","rss","social","transaction","unknown"]},
            "Network": {
                "description": "The network on which activities occur.",
                "type": "string"
            ,"enum":["arbitrum","arweave","avax","base","binance-smart-chain","crossbell","ethereum","farcaster","gnosis","linea","optimism","polygon","vsl"]},
            "Platform": {
                "description": "The platform on which activities occur.",
                "type": "string"
            ,"enum":["1inch","AAVE","Aavegotchi","Crossbell","Curve","ENS","Farcaster","Highlight","IQWiki","KiwiStand","Lens","Lido","LooksRare","Matters","Mirror","OpenSea","Optimism","Paragraph","RSS3","SAVM","Stargate","Uniswap","Unknown","VSL"]},
            "Fee": {
                "description": "Represents fee information for an activity.",
                "properties": {
                    "address": {
                        "description": "The address to which the fee is paid.",
                        "type": "string"
                    },
                    "amount": {
                        "description": "The amount of the fee.",
                        "type": "string"
                    },
                    "decimal": {
                        "description": "The decimal precision of the fee amount.",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "MetaCursor": {
                "description": "Metadata for paginated responses.",
                "properties": {
                    "cursor": {
                        "description": "The cursor for the next set of results.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "MetaTotalPages": {
                "description": "Metadata indicating the total number of pages.",
                "properties": {
                    "totalPages": {
                        "description": "The total number of pages available.",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "BridgeTransaction": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "sender": {
                        "type": "string"
                    },
                    "receiver": {
                        "type": "string"
                    },
                    "token": {
                        "type": "object",
                        "properties": {
                            "address": {
                                "type": "object",
                                "properties": {
                                    "l1": {
                                        "type": "string"
                                    },
                                    "l2": {
                                        "type": "string"
                                    }
                                }
                            },
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    "event": {
                        "properties": {
                            "deposit": {
                                "type": "object",
                                "nullable": true,
                                "properties": {
                                    "initialized": {
                                        "$ref": "#/components/schemas/TransactionEvent"
                                    },
                                    "finalized": {
                                        "$ref": "#/components/schemas/TransactionEvent"
                                    }
                                }
                            },
                            "withdraw": {
                                "type": "object",
                                "nullable": true,
                                "properties": {
                                    "initialized": {
                                        "$ref": "#/components/schemas/TransactionEvent"
                                    },
                                    "proved": {
                                        "$ref": "#/components/schemas/TransactionEvent"
                                    },
                                    "finalized": {
                                        "$ref": "#/components/schemas/TransactionEvent"
                                    }
                                }
                            }
                        }
                    }
                },
                "example": {
                    "id": "0xdbfa26e70977dfe2d68f3da7dd7d9e0c04136ecf14e80b98b209314ae7c462ff",
                    "sender": "0x3b6d02a24df681ffdf621d35d70aba7adaac07c1",
                    "receiver": "0x3b6d02a24df681ffdf621d35d70aba7adaac07c1",
                    "token": {
                        "address": {
                            "l1": "0x3ef1d5be1e2ce46c583a0c8e511f015706a0ab23",
                            "l2": "0x4200000000000000000000000000000000000042"
                        },
                        "value": "10000000000000000000000"
                    },
                    "event": {
                        "deposit": {
                            "initialized": {
                                "block": {
                                    "hash": "0x7735d45a54e91e836881c2f185766b391f335b53734b0a57f6c8843f66d03a13",
                                    "number": 5223592,
                                    "timestamp": 1707118764
                                },
                                "transaction": {
                                    "hash": "0x28e8d8f6cbbdfcf14501ebf0bbd11647dfabab371fc7a989a1e441321af6a6ee",
                                    "index": 49
                                }
                            },
                            "finalized": {
                                "block": {
                                    "hash": "0xb0208c1b76aca5d51cb3cde5d10a90f20c2e520c935fbb99af0b66031489433e",
                                    "number": 117285,
                                    "timestamp": 1707118890
                                },
                                "transaction": {
                                    "hash": "0x493972cb6219c74071c69fd9279df74b8cebbac4d087259991253e58930a4edb",
                                    "index": 1
                                }
                            }
                        }
                    }
                }
            },
            "StakeTransaction": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "staker": {
                        "type": "string"
                    },
                    "node": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    },
                    "chips": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/Chips"
                        }
                    },
                    "event": {
                        "properties": {
                            "deposit": {
                                "type": "object",
                                "nullable": true,
                                "properties": {
                                    "requested": {
                                        "$ref": "#/components/schemas/TransactionEvent"
                                    },
                                    "claimed": {
                                        "$ref": "#/components/schemas/TransactionEvent"
                                    }
                                }
                            },
                            "withdraw": {
                                "type": "object",
                                "nullable": true,
                                "properties": {
                                    "deposited": {
                                        "$ref": "#/components/schemas/TransactionEvent"
                                    }
                                }
                            },
                            "stake": {
                                "type": "object",
                                "nullable": true,
                                "properties": {
                                    "staked": {
                                        "$ref": "#/components/schemas/TransactionEvent"
                                    }
                                }
                            },
                            "unstake": {
                                "type": "object",
                                "nullable": true,
                                "properties": {
                                    "requested": {
                                        "$ref": "#/components/schemas/TransactionEvent"
                                    },
                                    "claimed": {
                                        "$ref": "#/components/schemas/TransactionEvent"
                                    }
                                }
                            }
                        }
                    }
                },
                "example": {
                    "id": "0xbfbb8cbffc01c13c1f849ecfb53099309e189b362fd621addbfa9f5d03dcd0c1",
                    "staker": "0xc8b960d09c0078c18dcbe7eb9ab9d816bcca8944",
                    "node": "0x6727a51caefcaf1bc189a8316ea09f844644b195",
                    "value": "8239445455124262851652",
                    "chips": [
                        {
                            "id": 2105,
                            "node": "0x6727a51caefcaf1bc189a8316ea09f844644b195",
                            "owner": "0xc8b960d09c0078c18dcbe7eb9ab9d816bcca8944",
                            "metadata": {
                                "name": "Chip #2105",
                                "description": "Chip is a unique NFT that represents a Node in the network. It is generated based on the node's address and token ID.",
                                "image": "https://gi.rss3.dev/chips/2105/image.svg"
                            }
                        }
                    ],
                    "event": {
                        "deposit": {
                            "deposited": {
                                "block": {
                                    "hash": "0x37af6202ef8303485aa3db32be6668070b6b9c7e46521325f959369847482015",
                                    "number": 128115,
                                    "timestamp": 1707140550
                                },
                                "transaction": {
                                    "hash": "0x823d988f7a18215ea850010131e5fa138d8d882ae4f95716d5791a45fac57833",
                                    "index": 1
                                }
                            }
                        }
                    }
                }
            },
            "TransactionEvent": {
                "type": "object",
                "nullable": true,
                "properties": {
                    "block": {
                        "properties": {
                            "hash": {
                                "type": "string"
                            },
                            "number": {
                                "type": "integer"
                            },
                            "timestamp": {
                                "type": "integer"
                            }
                        }
                    },
                    "transaction": {
                        "type": "object",
                        "properties": {
                            "hash": {
                                "type": "string"
                            },
                            "index": {
                                "type": "integer"
                            }
                        }
                    }
                },
                "example": {
                    "block": {
                        "hash": "0x200b26e118e51f23d052ef3aa92bc411dbd0a6ce811f511adb9f6049dc938614",
                        "number": 726419,
                        "timestamp": 1708337158
                    },
                    "transaction": {
                        "hash": "0x6595192f1193c2584c28e7d4b50b9208242bf9b4538933f0081d3f4625373d2f",
                        "index": 1
                    }
                }
            },
            "StakeStaking": {
                "type": "object",
                "properties": {
                    "staker": {
                        "type": "string"
                    },
                    "node": {
                        "type": "string"
                    },
                    "chips": {
                        "type": "object",
                        "properties": {
                            "total": {
                                "type": "integer"
                            },
                            "showcase": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Chips"
                                }
                            }
                        }
                    }
                },
                "example": {
                    "staker": 3.3926146615919217e+47,
                    "node": "0x08d66b34054a174841e2361bd4746ff9f4905cc2",
                    "chips": {
                        "total": 200,
                        "showcase": [
                            {
                                "id": 275,
                                "node": "0x08d66b34054a174841e2361bd4746ff9f4905cc2",
                                "owner": "0x3b6d02a24df681ffdf621d35d70aba7adaac07c1",
                                "metadata": {
                                    "name": "Chip #275",
                                    "description": "Chip is a unique NFT that represents a Node in the network. It is generated based on the node's address and token ID.",
                                    "image": "https://gi.rss3.dev/chips/275/image.svg"
                                }
                            },
                            {
                                "id": 276,
                                "node": "0x08d66b34054a174841e2361bd4746ff9f4905cc2",
                                "owner": "0x3b6d02a24df681ffdf621d35d70aba7adaac07c1",
                                "metadata": {
                                    "name": "Chip #276",
                                    "description": "Chip is a unique NFT that represents a Node in the network. It is generated based on the node's address and token ID.",
                                    "image": "https://gi.rss3.dev/chips/275/image.svg"
                                }
                            },
                            {
                                "id": 277,
                                "node": "0x08d66b34054a174841e2361bd4746ff9f4905cc2",
                                "owner": "0x3b6d02a24df681ffdf621d35d70aba7adaac07c1",
                                "metadata": {
                                    "name": "Chip #277",
                                    "description": "Chip is a unique NFT that represents a Node in the network. It is generated based on the node's address and token ID.",
                                    "image": "https://gi.rss3.dev/chips/275/image.svg"
                                }
                            },
                            {
                                "id": 278,
                                "node": "0x08d66b34054a174841e2361bd4746ff9f4905cc2",
                                "owner": "0x3b6d02a24df681ffdf621d35d70aba7adaac07c1",
                                "metadata": {
                                    "name": "Chip #278",
                                    "description": "Chip is a unique NFT that represents a Node in the network. It is generated based on the node's address and token ID.",
                                    "image": "https://gi.rss3.dev/chips/275/image.svg"
                                }
                            },
                            {
                                "id": 279,
                                "node": "0x08d66b34054a174841e2361bd4746ff9f4905cc2",
                                "owner": "0x3b6d02a24df681ffdf621d35d70aba7adaac07c1",
                                "metadata": {
                                    "name": "Chip #279",
                                    "description": "Chip is a unique NFT that represents a Node in the network. It is generated based on the node's address and token ID.",
                                    "image": "https://gi.rss3.dev/chips/275/image.svg"
                                }
                            }
                        ]
                    }
                }
            },
            "Chips": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "node": {
                        "type": "string"
                    },
                    "owner": {
                        "type": "string"
                    },
                    "metadata": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "image": {
                                "type": "string"
                            }
                        }
                    },
                    "value": {
                        "type": "string",
                        "description": "the value at time of minting"
                    },
                    "latest_value": {
                        "type": "string",
                        "description": "The latest value of the chip"
                    }
                },
                "example": {
                    "id": 474,
                    "node": "0x08d66b34054a174841e2361bd4746ff9f4905cc2",
                    "owner": "0x3b6d02a24df681ffdf621d35d70aba7adaac07c1",
                    "metadata": {
                        "name": "Chip #474",
                        "description": "Chip is a unique NFT that represents a Node in the network. It is generated based on the node's address and token ID.",
                        "image": "https://gi.rss3.dev/chips/474/image.svg"
                    },
                    "value": "5000000000000000000000",
                    "latest_value": "5500000000000000000000"
                }
            },
            "Node": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "address": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "tax_rate_basis_points": {
                        "type": "integer",
                        "nullable": true
                    },
                    "is_public_good": {
                        "type": "boolean"
                    },
                    "operation_pool_tokens": {
                        "type": "string"
                    },
                    "staking_pool_tokens": {
                        "type": "string"
                    },
                    "total_shares": {
                        "type": "string"
                    },
                    "slashed_tokens": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "registered",
                            "online",
                            "offline",
                            "exited"
                        ]
                    },
                    "last_heartbeat": {
                        "type": "integer",
                        "description": "The timestamp of the last heartbeat"
                    },
                    "local": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "country": {
                                    "type": "string"
                                },
                                "region": {
                                    "type": "string"
                                },
                                "city": {
                                    "type": "string"
                                },
                                "latitude": {
                                    "type": "number"
                                },
                                "longitude": {
                                    "type": "number"
                                }
                            }
                        }
                    },
                    "avatar": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "image": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            }
                        }
                    },
                    "min_tokens_to_stake": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "integer",
                        "description": "The timestamp of the Node creation"
                    }
                },
                "example": {
                    "id": 1,
                    "address": "0xc5999271b01afc77ed7a6738b40c34677c2a581c",
                    "name": "RSS3 Node",
                    "description": "Get started with RSS3 Node with symphonia",
                    "tax_rate_basis_points": 1000,
                    "is_public_good": false,
                    "operation_pool_tokens": "10000000000000000000000",
                    "staking_pool_tokens": "0",
                    "total_shares": "0",
                    "slashed_tokens": "0",
                    "status": "online",
                    "last_heartbeat": 1709117916,
                    "local": [
                        {
                            "country": "CN",
                            "region": "GD",
                            "city": "SZ",
                            "latitude": 22.5431,
                            "longitude": 114.0579
                        }
                    ],
                    "avatar": [
                        {
                            "name": "Node Avatar",
                            "description": "",
                            "image": "http://127.0.0.1/nodes/0xC5999271b01AfC77ED7a6738b40C34677C2A581c/avatar.svg"
                        }
                    ],
                    "min_tokens_to_stake": "0",
                    "created_at": 1709087910
                }
            },
            "NodeEvent": {
                "type": "object",
                "properties": {
                    "address_from": {
                        "type": "string"
                    },
                    "address_to": {
                        "type": "string"
                    },
                    "node_id": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "node_created",
                            "node_updated",
                            "node_updated_to_public_good"
                        ]
                    },
                    "log_index": {
                        "type": "integer"
                    },
                    "chain_id": {
                        "type": "integer"
                    },
                    "block": {
                        "type": "object",
                        "properties": {
                            "hash": {
                                "type": "string"
                            },
                            "number": {
                                "type": "integer"
                            },
                            "timestamp": {
                                "type": "integer"
                            }
                        }
                    },
                    "transaction": {
                        "type": "object",
                        "properties": {
                            "hash": {
                                "type": "string"
                            },
                            "index": {
                                "type": "integer"
                            }
                        }
                    },
                    "metadata": {
                        "type": "object",
                        "properties": {
                            "node_created": {
                                "type": "object",
                                "properties": {
                                    "node_id": {
                                        "type": "integer"
                                    },
                                    "address": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "tax_rate_basis_points": {
                                        "type": "integer"
                                    },
                                    "is_public_good": {
                                        "type": "boolean"
                                    }
                                }
                            },
                            "node_updated": {
                                "type": "object",
                                "properties": {
                                    "address": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    }
                                }
                            },
                            "node_updated_to_public_good": {
                                "type": "object",
                                "properties": {
                                    "address": {
                                        "type": "string"
                                    },
                                    "is_public_good": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "NodeMinTokensToStakeSnapshot": {
                "type": "object",
                "properties": {
                    "node_address": {
                        "type": "string"
                    },
                    "snapshots": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "date": {
                                    "type": "string",
                                    "example": "2024-03-13T00:08:38+08:00"
                                },
                                "epoch_id": {
                                    "type": "integer"
                                },
                                "node_address": {
                                    "type": "string"
                                },
                                "min_tokens_to_stake": {
                                    "type": "string"
                                },
                                "created_at": {
                                    "type": "string"
                                },
                                "updated_at": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "StakerProfitSnapshot": {
                "type": "object",
                "properties": {
                    "ownerAddress": {
                        "type": "string"
                    },
                    "date": {
                        "type": "string",
                        "example": "2024-03-13T00:08:38+08:00"
                    },
                    "epoch_id": {
                        "type": "integer"
                    },
                    "total_chip_amount": {
                        "type": "string"
                    },
                    "total_chip_value": {
                        "type": "string"
                    }
                }
            },
            "ChipPNL": {
                "type": "object",
                "properties": {
                    "date": {
                        "type": "string"
                    },
                    "total_chip_amount": {
                        "type": "string"
                    },
                    "total_chip_value": {
                        "type": "string"
                    },
                    "profit_and_loss": {
                        "type": "string"
                    }
                }
            },
            "OperationProfit": {
                "type": "object",
                "properties": {
                    "node_address": {
                        "type": "string"
                    },
                    "date": {
                        "type": "string",
                        "example": "2024-03-13T00:08:38+08:00"
                    },
                    "epoch_id": {
                        "type": "integer"
                    },
                    "operation_pool": {
                        "type": "string"
                    }
                }
            },
            "OperationProfitPNL": {
                "type": "object",
                "properties": {
                    "date": {
                        "type": "string"
                    },
                    "operation_pool": {
                        "type": "string"
                    },
                    "profit_and_loss": {
                        "type": "string"
                    }
                }
            },
            "BriefEpoch": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "start_timestamp": {
                        "type": "integer"
                    },
                    "end_timestamp": {
                        "type": "integer"
                    },
                    "total_operation_rewards": {
                        "type": "string"
                    },
                    "total_staking_rewards": {
                        "type": "string"
                    },
                    "total_request_counts": {
                        "type": "string"
                    },
                    "total_reward_items": {
                        "type": "integer"
                    },
                    "distributions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BriefEpochDistribution"
                        }
                    }
                }
            },
            "Epoch": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "start_timestamp": {
                        "type": "integer"
                    },
                    "end_timestamp": {
                        "type": "integer"
                    },
                    "total_operation_rewards": {
                        "type": "string"
                    },
                    "total_staking_rewards": {
                        "type": "string"
                    },
                    "total_request_counts": {
                        "type": "string"
                    },
                    "total_reward_items": {
                        "type": "integer"
                    },
                    "distributions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EpochDistribution"
                        }
                    }
                }
            },
            "BriefEpochDistribution": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "start_timestamp": {
                        "type": "integer"
                    },
                    "end_timestamp": {
                        "type": "integer"
                    },
                    "transaction": {
                        "type": "object",
                        "properties": {
                            "hash": {
                                "type": "string"
                            },
                            "index": {
                                "type": "integer"
                            }
                        }
                    },
                    "block": {
                        "type": "object",
                        "properties": {
                            "hash": {
                                "type": "string"
                            },
                            "number": {
                                "type": "integer"
                            },
                            "timestamp": {
                                "type": "integer"
                            }
                        }
                    },
                    "total_operation_rewards": {
                        "type": "string"
                    },
                    "total_staking_rewards": {
                        "type": "string"
                    },
                    "total_request_counts": {
                        "type": "string"
                    },
                    "total_reward_items": {
                        "type": "integer"
                    }
                }
            },
            "EpochDistribution": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "start_timestamp": {
                        "type": "integer"
                    },
                    "end_timestamp": {
                        "type": "integer"
                    },
                    "transaction": {
                        "type": "object",
                        "properties": {
                            "hash": {
                                "type": "string"
                            },
                            "index": {
                                "type": "integer"
                            }
                        }
                    },
                    "block": {
                        "type": "object",
                        "properties": {
                            "hash": {
                                "type": "string"
                            },
                            "number": {
                                "type": "integer"
                            },
                            "timestamp": {
                                "type": "integer"
                            }
                        }
                    },
                    "total_operation_rewards": {
                        "type": "string"
                    },
                    "total_staking_rewards": {
                        "type": "string"
                    },
                    "total_request_counts": {
                        "type": "string"
                    },
                    "total_reward_items": {
                        "type": "integer"
                    },
                    "reward_items": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "epoch_id": {
                                    "type": "integer"
                                },
                                "index": {
                                    "type": "integer"
                                },
                                "transaction_hash": {
                                    "type": "string"
                                },
                                "node_address": {
                                    "type": "string"
                                },
                                "operation_rewards": {
                                    "type": "string"
                                },
                                "staking_rewards": {
                                    "type": "string"
                                },
                                "tax_collected": {
                                    "type": "string"
                                },
                                "request_counts": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "WorkerDetail": {
                "type": "object",
                "properties": {
                    "is_required": {
                        "type": "boolean"
                    },
                    "type": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                }
            },
            "NetworkWorker": {
                "type": "object",
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/WorkerDetail"
                    },
                    "network": {
                        "$ref": "#/components/schemas/WorkerDetail"
                    },
                    "worker": {
                        "$ref": "#/components/schemas/WorkerDetail"
                    },
                    "endpoint": {
                        "$ref": "#/components/schemas/WorkerDetail"
                    },
                    "parameters": {
                        "type": "object",
                        "properties": {
                            "rpc_thread_blocks": {
                                "$ref": "#/components/schemas/WorkerDetail"
                            },
                            "rpc_batch_blocks": {
                                "$ref": "#/components/schemas/WorkerDetail"
                            },
                            "rpc_batch_receipts": {
                                "$ref": "#/components/schemas/WorkerDetail"
                            },
                            "rpc_batch_block_receipts": {
                                "$ref": "#/components/schemas/WorkerDetail"
                            }
                        }
                    }
                },
                "example": {
                    "id": {
                        "is_required": true,
                        "type": "string",
                        "value": "ethereum-core",
                        "description": "You can define your own worker id, you are recommended to use `[network]-[worker]`"
                    },
                    "network": {
                        "is_required": true,
                        "type": "string",
                        "value": "ethereum",
                        "description": "Your worker is running on the defined network"
                    },
                    "worker": {
                        "is_required": true,
                        "type": "string",
                        "value": "core",
                        "description": "Your worker is running the defined worker"
                    },
                    "endpoint": {
                        "is_required": true,
                        "type": "string",
                        "value": "https://rpc.ankr.com/eth",
                        "description": "You can fill this field with a global endpoint id (should be pre-defined in endpoints part) or a url"
                    },
                    "parameters": {
                        "rpc_thread_blocks": {
                            "is_required": false,
                            "type": "uint",
                            "value": "8",
                            "description": "The number of blocks to process in a thread"
                        },
                        "rpc_batch_blocks": {
                            "is_required": false,
                            "type": "uint",
                            "value": "8",
                            "description": "The number of blocks to process in a batch"
                        },
                        "rpc_batch_receipts": {
                            "is_required": false,
                            "type": "uint",
                            "value": "200",
                            "description": "The number of receipts to process in a batch"
                        },
                        "rpc_batch_block_receipts": {
                            "is_required": false,
                            "type": "uint",
                            "value": "8",
                            "description": "The number of block receipts to process in a batch"
                        }
                    }
                }
            },
            "EpochAPYSnapshot": {
                "type": "object",
                "properties": {
                    "date": {
                        "type": "string"
                    },
                    "epoch_id": {
                        "type": "integer"
                    },
                    "apy": {
                        "type": "string"
                    }
                },
                "example": {
                    "date": "2024-03-13T00:08:38+08:00",
                    "epoch_id": 1,
                    "apy": "0.1"
                }
            }
        ,"Type":{"enum":["approval","bridge","burn","comment","delete","feed","liquidity","mint","post","profile","proxy","revise","reward","share","staking","swap","trade","transfer","unknown"]}}
    }
}
